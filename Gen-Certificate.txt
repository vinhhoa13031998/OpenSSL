#!/bin/bash

#Create a required
domain_name=$1

#Change information's request
country=FR
state=Val-de-Loire
locality=Blois
organization=Insa-CVL
email=vinhhoa13031998@gmail.com
commonname=Vinh-Hoa


#file name:
CACert="CA_Certificate.crt"
CSR="${domain_name}.csr"
RSAkey="${domain_name}.key"
RSApublickey="public.key"
CAkey="CA.key"
Signed_CA="CA_Signed.crt"
SerialCA="Serial.r"

#option
password=dummypassword
CAserial=dummyCA

if [ -z "$domain_name" ]; then
	echo "Argument not present!"
	echo " $0 [domain name]"
	exit 99
	
fi

function Generate_RSA_key {
	echo "----Generating a private key"
	openssl genrsa -des3 -passout pass:$password -out $RSAkey 2048
	
	read -p "Do you want to remove the passphrase from your private key [Y/n]? "
	if [ $REPLY = "Y" ]; then
		echo "----Removing passphrase of <$RSAkey> private key"
		openssl rsa -in $RSAkey -out $RSAkey -passin pass:$password
	else 
		echo "----Keeping passphrase of $RSAkey> private key"
	fi
	echo "  Done"
}

function Generate_CA_key {
	echo "----Creating CA key"
	openssl genrsa -des3 -out $CAkey 2048
	echo "	Done"
}


function Create_PublicKey {
	echo "----Creating puplic key $RSApublickey from $RSAkey private key"
	if [ $password = "dummypassword" ]; then
		openssl rsa -in $RSAkey -pubout -out $RSApublickey
	else 
		openssl rsa -in $RSAkey -passin pass:$password -pubout -out $RSApublickey
	fi
	echo "	Done"
}

function Create_CSR {
	echo "----Creating a Certificate signing request from <$RSAkey> private key and domain <$domain_name>"
	openssl req -new -key $RSAkey -out $CSR -passin pass:$password -subj "/C=$country/ST=$state/L=$locality/O=$organization/CN=$commonname/emailAddress=$email"
	echo "	Done"
}

function Create_CA {
	echo "----Generating a Certificate Authority from CA key $CAkey"
	echo "Creating a self-signed CA with <1 year validation>"
	openssl req -new -x509 -sha256 -key $CAkey -out $CACert -subj "/C=VN/ST=Center/L=HUE/O=BOSS-VN/CN=Family/emailAddress=Test@gmail.org" 
	echo "	Done"
}


function Signing {
	read -p "----Enter your Certificate Authority serial :"
	CAserial=$REPLY
	if [ -z "$CAserial" ]; then
		read -p "Please enter your CA serial, it is a serie of hexa number :"
		CAserial=$REPLY
	fi
	read -p "Do you want to keep your CA serial [Y/n]?"
	if [ $REPLY = "Y" ]; then
		echo "----Creating CA serial file"
		echo $CAserial > $SerialCA
	fi
	echo "	Done"
	echo "Signing your CSR to CA"
	openssl x509 -days 365 -CAserial $SerialCA -CA $CACert -CAkey $CAkey -in $CSR -req -out $Signed_CA
	echo "	Done"
}

function Verify {
	echo "Verifying your certificate"
	openssl verify -CAfile $CACert $Signed_CA
}

function Encrypte_file {
	#read -p "Enter your address file that you want to encrypt"
	openssl enc -aes-256-cbc -salt -in Test.txt -out SECRET_FILE.enc -pass file:./home/$(whoami)/Desktop/BashSSL/$RSAkey
}



### Main function

read -p "Generate a new private key [Y/n]?"

if [ $REPLY = "Y" ]; then
	Generate_RSA_key
fi

#read -p "Generate a new Certificate authority key [Y/n]?"
#if [ $REPLY = "Y" ]; then
#	Create_CA_key 2> dummy.file
#fi

read -p "Create a public key from your RSA_private key [Y/n]?"
if [ $REPLY = "Y" ]; then
	Create_PublicKey 2> dummy.file
fi

read -p "Generate a new Certificate signing request [Y/n]? "
if [ $REPLY = "Y" ]; then
	Create_CSR 2> dummy.file
fi

read -p "Do you want to generate a new Certificate Authority [Y/n]? "
if [ $REPLY = "Y" ]; then
	read -p "Using a new CA private key for your Authority [Y/n]? "
	if [ $REPLY = "Y" ]; then
		Generate_CA_key
	else 
		echo "Using your old CA private key"
	fi
	Create_CA
fi

read -p "Do you want to sign your CSR <$CSR> to the CA <$CACert> [Y/n]? "
if [ $REPLY = "Y" ]; then
	Signing
fi

read -p " Verify your Certificate [Y/n]? "
Verify

